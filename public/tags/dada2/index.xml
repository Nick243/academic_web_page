<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DADA2 on </title>
    <link>/tags/dada2/</link>
    <description>Recent content in DADA2 on </description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	    <atom:link href="/tags/dada2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Phyloseq</title>
      <link>/post/introduction-to-phyloseq/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/introduction-to-phyloseq/</guid>
      <description>


&lt;div id=&#34;section&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;&lt;/h1&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;This post is from a tutorial demonstrating the processing of amplicon short read data in R taught as part of the &lt;a href=&#34;https://github.com/Nick243/Introduction-to-Metagenomics-Summer-Workshop-2019&#34;&gt;Introduction to Metagenomics Summer Workshop&lt;/a&gt;. It provides a quick introduction some of the functionality provided by phyloseq and follows some of Paul McMurdie’s excellent tutorials. This tutorial picks up where Ben Callahan’s DADA2 tutorial leaves off and highlights some of the main accessor and processor functions of the package. I thought it might be useful to a broader audience so decided to post it.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The goal of this interactive session is to &lt;strong&gt;introduce you to some of the basic functionality of the&lt;/strong&gt; &lt;a href=&#34;https://www.bioconductor.org/packages/release/bioc/html/phyloseq.html&#34;&gt;phyloseq package&lt;/a&gt; that can help you to explore and better understand your metagenomic data. We will be working with the phyloseq object that was created during the &lt;a href=&#34;http://benjjneb.github.io/dada2/tutorial.html&#34;&gt;DADA2 tutorial&lt;/a&gt;. If you recall, these were murine stool samples collected from a single mouse over time. The phyloseq object contains: an ASV table, sample metadata, taxonomic classifications, and the reference sequences. We did not generate a phylogenetic tree from these sequences, but if we had, it could be included as well.&lt;/p&gt;
&lt;p&gt;The session will quickly cover some of the basic accessor, analysis and graphical functions available to you when using the phyloseq package in R.&lt;/p&gt;
&lt;p&gt;To learn more, Paul McMurdie has an excellent set of tutorials that I encourage you to explore.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://joey711.github.io/phyloseq/preprocess.html&#34; class=&#34;uri&#34;&gt;https://joey711.github.io/phyloseq/preprocess.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://joey711.github.io/phyloseq/index.html&#34; class=&#34;uri&#34;&gt;https://joey711.github.io/phyloseq/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;loading-required-packages-and-phyloseq-object&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Loading required packages and phyloseq object&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(dada2); packageVersion(&amp;quot;dada2&amp;quot;)           &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: Rcpp&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;#39;1.12.1&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(phyloseq); packageVersion(&amp;quot;phyloseq&amp;quot;)      &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;#39;1.28.0&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2); packageVersion(&amp;quot;ggplot2&amp;quot;)        &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;#39;3.2.0&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;If the phyloseq (ps) object is not already loaded into your environment…let’s go ahead and do that now. You will need to change the path so that it maps to the ps object on your computer. No path is needed if you are working in an RStudio project folder (or if you cloned the folder from GitHub).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ps &amp;lt;- readRDS(&amp;quot;C:/Users/olljt2/Desktop/academic_web_page/static/data/ps.rds&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;accessing-the-sample-information-and-sample-metadata&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Accessing the sample information and sample metadata&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ps&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 232 taxa and 19 samples ]
## sample_data() Sample Data:       [ 19 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 232 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 232 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Here we can see that we have a phyloseq object that consists of:
&lt;ul&gt;
&lt;li&gt;An OTU table with 232 taxa and 19 samples&lt;/li&gt;
&lt;li&gt;A sample metadata file consisting of 4 variables&lt;/li&gt;
&lt;li&gt;A taxonomy table with 7 ranks&lt;/li&gt;
&lt;li&gt;Reference sequences on all 232 taxa&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;This highlights one of the key advantages of working with phyloseq objects in R. Each of these data structures is contained in a single object. This makes it easy to keep all of your data together and to share it with colleagues or include it as a supplemental file to a publication.&lt;/p&gt;
&lt;p&gt;Next we will see how each of the components can be accessed. We will run through several commands below and then discuss the output.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nsamples(ps)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 19&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_names(ps)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;F3D0&amp;quot;   &amp;quot;F3D1&amp;quot;   &amp;quot;F3D141&amp;quot; &amp;quot;F3D142&amp;quot; &amp;quot;F3D143&amp;quot; &amp;quot;F3D144&amp;quot; &amp;quot;F3D145&amp;quot;
##  [8] &amp;quot;F3D146&amp;quot; &amp;quot;F3D147&amp;quot; &amp;quot;F3D148&amp;quot; &amp;quot;F3D149&amp;quot; &amp;quot;F3D150&amp;quot; &amp;quot;F3D2&amp;quot;   &amp;quot;F3D3&amp;quot;  
## [15] &amp;quot;F3D5&amp;quot;   &amp;quot;F3D6&amp;quot;   &amp;quot;F3D7&amp;quot;   &amp;quot;F3D8&amp;quot;   &amp;quot;F3D9&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_variables(ps)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Subject&amp;quot; &amp;quot;Gender&amp;quot;  &amp;quot;Day&amp;quot;     &amp;quot;When&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(sample_data(ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        Subject Gender Day  When
## F3D0         3      F   0 Early
## F3D1         3      F   1 Early
## F3D141       3      F 141  Late
## F3D142       3      F 142  Late
## F3D143       3      F 143  Late
## F3D144       3      F 144  Late&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_data(ps)$When&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Late&amp;quot;  &amp;quot;Late&amp;quot;  &amp;quot;Late&amp;quot;  &amp;quot;Late&amp;quot;  &amp;quot;Late&amp;quot;  &amp;quot;Late&amp;quot; 
##  [9] &amp;quot;Late&amp;quot;  &amp;quot;Late&amp;quot;  &amp;quot;Late&amp;quot;  &amp;quot;Late&amp;quot;  &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot;
## [17] &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(sample_data(ps)$When)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Early  Late 
##     9    10&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;median(sample_data(ps)$Day)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 141&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metadata &amp;lt;- data.frame(sample_data(ps))
head(metadata)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        Subject Gender Day  When
## F3D0         3      F   0 Early
## F3D1         3      F   1 Early
## F3D141       3      F 141  Late
## F3D142       3      F 142  Late
## F3D143       3      F 143  Late
## F3D144       3      F 144  Late&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we can see that we have 19 samples and they are assigned the sample names we gave them during the DADA2 tutorial.
We also have 4 variables (Subject, Gender, Day, and When) and that information can be easily accessed and computations or descriptive statistics performed.
Specific components of the ps object can be extracted and converted to a data.frame for additional analyses.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;examining-the-number-of-reads-for-each-sample&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Examining the number of reads for each sample&lt;/h1&gt;
&lt;p&gt;Phyloseq makes it easy to calculate the total number of reads for each sample, sort them to identify potentially problematic samples, and plot their distribution.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_sums(ps)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   F3D0   F3D1 F3D141 F3D142 F3D143 F3D144 F3D145 F3D146 F3D147 F3D148 
##   6528   5017   4863   2521   2518   3488   5820   3879  13006   9935 
## F3D149 F3D150   F3D2   F3D3   F3D5   F3D6   F3D7   F3D8   F3D9 
##  10653   4240  16835   5491   3716   6679   4217   4547   6015&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sort(sample_sums(ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## F3D143 F3D142 F3D144   F3D5 F3D146   F3D7 F3D150   F3D8 F3D141   F3D1 
##   2518   2521   3488   3716   3879   4217   4240   4547   4863   5017 
##   F3D3 F3D145   F3D9   F3D0   F3D6 F3D148 F3D149 F3D147   F3D2 
##   5491   5820   6015   6528   6679   9935  10653  13006  16835&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hist(sample_sums(ps), main=&amp;quot;Histogram: Read Counts&amp;quot;, xlab=&amp;quot;Total Reads&amp;quot;, 
     border=&amp;quot;blue&amp;quot;, col=&amp;quot;green&amp;quot;, las=1, breaks=12)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-28-introduction-to-phyloseq_files/figure-html/number%20of%20reads-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;metadata$total_reads &amp;lt;- sample_sums(ps)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we see that the number of reads per sample ranges from 2,518 to 16,835 and most samples have less than 10k reads. &lt;em&gt;Try to calculate the mean and median number of reads on your own.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The last line of code above can be used to add a new column containing the total read count to the metadata data.frame. Similarly, sample_data(ps)$total_reads &amp;lt;- sample_sums(ps) would add this information to the phyloseq object itself (as a new sample_data variable).&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;examining-the-otu-table&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Examining the OTU table&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ntaxa(ps)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 232&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(taxa_names(ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;ASV1&amp;quot; &amp;quot;ASV2&amp;quot; &amp;quot;ASV3&amp;quot; &amp;quot;ASV4&amp;quot; &amp;quot;ASV5&amp;quot; &amp;quot;ASV6&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(taxa_sums(ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  ASV1  ASV2  ASV3  ASV4  ASV5  ASV6 
## 14148  9898  8862  7935  5880  5469&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(asv_tab &amp;lt;- data.frame(otu_table(ps)[1:5, 1:5]))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        ASV1 ASV2 ASV3 ASV4 ASV5
## F3D0    579  345  449  430  154
## F3D1    405  353  231   69  140
## F3D141  444  362  345  502  189
## F3D142  289  304  158  164  180
## F3D143  228  176  204  231  130&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Phyloseq allows you to easily:
&lt;ul&gt;
&lt;li&gt;Obtain a count of the number of taxa&lt;/li&gt;
&lt;li&gt;Access their names (e.g. ASV1, ASV2, …)&lt;/li&gt;
&lt;li&gt;Get a count of each ASV summed over all samples&lt;/li&gt;
&lt;li&gt;Extract the OTU table as a data.frame&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;examining-the-taxonomy&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Examining the taxonomy&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rank_names(ps)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Kingdom&amp;quot; &amp;quot;Phylum&amp;quot;  &amp;quot;Class&amp;quot;   &amp;quot;Order&amp;quot;   &amp;quot;Family&amp;quot;  &amp;quot;Genus&amp;quot;   &amp;quot;Species&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(tax_table(ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Taxonomy Table:     [6 taxa by 7 taxonomic ranks]:
##      Kingdom    Phylum          Class         Order          
## ASV1 &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
## ASV2 &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
## ASV3 &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
## ASV4 &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
## ASV5 &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
## ASV6 &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
##      Family           Genus         Species
## ASV1 &amp;quot;Muribaculaceae&amp;quot; NA            NA     
## ASV2 &amp;quot;Muribaculaceae&amp;quot; NA            NA     
## ASV3 &amp;quot;Muribaculaceae&amp;quot; NA            NA     
## ASV4 &amp;quot;Muribaculaceae&amp;quot; NA            NA     
## ASV5 &amp;quot;Bacteroidaceae&amp;quot; &amp;quot;Bacteroides&amp;quot; NA     
## ASV6 &amp;quot;Muribaculaceae&amp;quot; NA            NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(tax_table(ps)[, 2])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Taxonomy Table:     [6 taxa by 1 taxonomic ranks]:
##      Phylum         
## ASV1 &amp;quot;Bacteroidetes&amp;quot;
## ASV2 &amp;quot;Bacteroidetes&amp;quot;
## ASV3 &amp;quot;Bacteroidetes&amp;quot;
## ASV4 &amp;quot;Bacteroidetes&amp;quot;
## ASV5 &amp;quot;Bacteroidetes&amp;quot;
## ASV6 &amp;quot;Bacteroidetes&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(tax_table(ps)[, 2])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##      Actinobacteria       Bacteroidetes       Cyanobacteria 
##                   6                  20                   3 
## Deinococcus-Thermus  Epsilonbacteraeota          Firmicutes 
##                   1                   1                 185 
##     Patescibacteria      Proteobacteria         Tenericutes 
##                   2                   7                   6 
##     Verrucomicrobia 
##                   1&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(tax_tab &amp;lt;- data.frame(tax_table(ps)[50:55, ]))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        Kingdom             Phylum           Class             Order
## ASV50 Bacteria         Firmicutes      Clostridia     Clostridiales
## ASV51 Bacteria         Firmicutes      Clostridia     Clostridiales
## ASV52 Bacteria         Firmicutes      Clostridia     Clostridiales
## ASV53 Bacteria Epsilonbacteraeota Campylobacteria Campylobacterales
## ASV54 Bacteria         Firmicutes      Clostridia     Clostridiales
## ASV55 Bacteria         Firmicutes      Clostridia     Clostridiales
##                  Family                   Genus Species
## ASV50   Lachnospiraceae           Acetatifactor    &amp;lt;NA&amp;gt;
## ASV51   Ruminococcaceae     Ruminiclostridium_5    &amp;lt;NA&amp;gt;
## ASV52   Lachnospiraceae Lachnospiraceae_UCG-001    &amp;lt;NA&amp;gt;
## ASV53 Helicobacteraceae            Helicobacter  pylori
## ASV54       Family_XIII                    &amp;lt;NA&amp;gt;    &amp;lt;NA&amp;gt;
## ASV55   Ruminococcaceae     Ruminiclostridium_5    &amp;lt;NA&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we can see that we have information on 7 taxonomic ranks from Kingdom to Species. We can easily access specific components of this object to learn more about the classifications. For example, we see that the vast majority of ASVs are classified as Firmicutes. This is in line with our expectations. Conducting such assessments may help you identify potential sequencing errors that made it through the denoising pipeline (i.e. those not assigned to a Kingdom) or to understand the proportion of sequences classified at lower levels (i.e. genus or species).&lt;/p&gt;
&lt;p&gt;One could also swap out this taxonomy file for another…say using the &lt;a href=&#34;https://rdrr.io/bioc/DECIPHER/man/IdTaxa.html&#34;&gt;IDTAXA&lt;/a&gt; function in the &lt;a href=&#34;http://www.bioconductor.org/packages/release/bioc/html/DECIPHER.html&#34;&gt;DECIPHER&lt;/a&gt; package or an alternative reference database (i.e. Silva or Greengenes). &lt;em&gt;I will let you look into this on your own!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;examining-the-reference-sequences&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Examining the reference sequences&lt;/h1&gt;
&lt;p&gt;Storing the reference sequences with your phyloseq object is critical of you rename the ASV names to ASV1, ASV2, …
This will allow you to communicate the information on these ASVs directly (i.e. you can provide the exact sequence variant information). This information is also required to build a phylogenetic tree or BLAST the sequences against the NCBI database for example. &lt;strong&gt;In short, always include these in the phyloseq object.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Below we see that these sequences are stored as a DNAStringSet. The refseq command returns the ASV number, sequence length, and amplicon sequence for each ASV. The function &lt;a href=&#34;https://rdrr.io/bioc/dada2/man/nwhamming.html&#34;&gt;dada2::nwhamming&lt;/a&gt; is calculating the Hamming distance of two sequences after alignment. We will discuss more about this in class. We can also pull out the component and store it as a data.frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(refseq(ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   A DNAStringSet instance of length 6
##     width seq                                          names               
## [1]   252 TACGGAGGATGCGAGCGTTAT...AAGTGTGGGTATCGAACAGG ASV1
## [2]   252 TACGGAGGATGCGAGCGTTAT...AAGCGTGGGTATCGAACAGG ASV2
## [3]   252 TACGGAGGATGCGAGCGTTAT...AAGCGTGGGTATCGAACAGG ASV3
## [4]   252 TACGGAGGATGCGAGCGTTAT...AAGTGCGGGGATCGAACAGG ASV4
## [5]   253 TACGGAGGATCCGAGCGTTAT...AAGTGTGGGTATCAAACAGG ASV5
## [6]   252 TACGGAGGATGCGAGCGTTAT...AAGTGCGGGGATCAAACAGG ASV6&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dada2::nwhamming(as.vector(refseq(ps)[1]), as.vector(refseq(ps)[2]))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 20&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(ref_tab &amp;lt;- data.frame(head(refseq(ps))))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                                                                                                                                                                                                                                   head.refseq.ps..
## ASV1  TACGGAGGATGCGAGCGTTATCCGGATTTATTGGGTTTAAAGGGTGCGCAGGCGGAAGATCAAGTCAGCGGTAAAATTGAGAGGCTCAACCTCTTCGAGCCGTTGAAACTGGTTTTCTTGAGTGAGCGAGAAGTATGCGGAATGCGTGGTGTAGCGGTGAAATGCATAGATATCACGCAGAACTCCGATTGCGAAGGCAGCATACCGGCGCTCAACTGACGCTCATGCACGAAAGTGTGGGTATCGAACAGG
## ASV2  TACGGAGGATGCGAGCGTTATCCGGATTTATTGGGTTTAAAGGGTGCGCAGGCGGACTCTCAAGTCAGCGGTCAAATCGCGGGGCTCAACCCCGTTCCGCCGTTGAAACTGGGAGCCTTGAGTGCGCGAGAAGTAGGCGGAATGCGTGGTGTAGCGGTGAAATGCATAGATATCACGCAGAACTCCGATTGCGAAGGCAGCCTACCGGCGCGCAACTGACGCTCATGCACGAAAGCGTGGGTATCGAACAGG
## ASV3  TACGGAGGATGCGAGCGTTATCCGGATTTATTGGGTTTAAAGGGTGCGTAGGCGGGCTGTTAAGTCAGCGGTCAAATGTCGGGGCTCAACCCCGGCCTGCCGTTGAAACTGGCGGCCTCGAGTGGGCGAGAAGTATGCGGAATGCGTGGTGTAGCGGTGAAATGCATAGATATCACGCAGAACTCCGATTGCGAAGGCAGCATACCGGCGCCCGACTGACGCTGAGGCACGAAAGCGTGGGTATCGAACAGG
## ASV4  TACGGAGGATGCGAGCGTTATCCGGATTTATTGGGTTTAAAGGGTGCGTAGGCGGGCTTTTAAGTCAGCGGTAAAAATTCGGGGCTCAACCCCGTCCGGCCGTTGAAACTGGGGGCCTTGAGTGGGCGAGAAGAAGGCGGAATGCGTGGTGTAGCGGTGAAATGCATAGATATCACGCAGAACCCCGATTGCGAAGGCAGCCTTCCGGCGCCCTACTGACGCTGAGGCACGAAAGTGCGGGGATCGAACAGG
## ASV5 TACGGAGGATCCGAGCGTTATCCGGATTTATTGGGTTTAAAGGGAGCGTAGGTGGATTGTTAAGTCAGTTGTGAAAGTTTGCGGCTCAACCGTAAAATTGCAGTTGAAACTGGCAGTCTTGAGTACAGTAGAGGTGGGCGGAATTCGTGGTGTAGCGGTGAAATGCTTAGATATCACGAAGAACTCCGATTGCGAAGGCAGCTCACTGGACTGCAACTGACACTGATGCTCGAAAGTGTGGGTATCAAACAGG
## ASV6  TACGGAGGATGCGAGCGTTATCCGGATTTATTGGGTTTAAAGGGTGCGTAGGCGGCCTGCCAAGTCAGCGGTAAAATTGCGGGGCTCAACCCCGTACAGCCGTTGAAACTGCCGGGCTCGAGTGGGCGAGAAGTATGCGGAATGCGTGGTGTAGCGGTGAAATGCATAGATATCACGCAGAACCCCGATTGCGAAGGCAGCATACCGGCGCCCTACTGACGCTGAGGCACGAAAGTGCGGGGATCAAACAGG&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;accessing-the-phylogenetic-tree&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Accessing the phylogenetic tree&lt;/h1&gt;
&lt;p&gt;We did not generate a phylogenetic tree during the DADA2 tutorial in the interest of time. However, phyloseq has many excellent tools for working with and visualizing trees. I recommend you take a look at these tutorials below for some examples.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://joey711.github.io/phyloseq/preprocess.html&#34; class=&#34;uri&#34;&gt;https://joey711.github.io/phyloseq/preprocess.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://joey711.github.io/phyloseq/plot_tree-examples.html&#34; class=&#34;uri&#34;&gt;https://joey711.github.io/phyloseq/plot_tree-examples.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ben Callahan’s &lt;a href=&#34;https://f1000research.com/articles/5-1492&#34;&gt;F1000&lt;/a&gt; paper demonstrates a complete analysis workflow in R including the construction of a de-novo phylogenetic tree. I highly recommned you take a look at this paper.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;agglomerating-and-subsetting-taxa&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Agglomerating and subsetting taxa&lt;/h1&gt;
&lt;p&gt;Often times we may want to agglomerate taxa to a specific taxonomic rank for analysis. Or we may want to work with a given subset of taxa. We can perform these operations in phyloseq with the tax_glom and subset_taxa functions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(ps_phylum &amp;lt;- tax_glom(ps, &amp;quot;Phylum&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 10 taxa and 19 samples ]
## sample_data() Sample Data:       [ 19 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 10 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 10 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;taxa_names(ps_phylum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;ASV1&amp;quot;   &amp;quot;ASV11&amp;quot;  &amp;quot;ASV19&amp;quot;  &amp;quot;ASV53&amp;quot;  &amp;quot;ASV67&amp;quot;  &amp;quot;ASV90&amp;quot;  &amp;quot;ASV107&amp;quot;
##  [8] &amp;quot;ASV109&amp;quot; &amp;quot;ASV189&amp;quot; &amp;quot;ASV191&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;taxa_names(ps_phylum) &amp;lt;- tax_table(ps_phylum)[, 2]
taxa_names(ps_phylum)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;Bacteroidetes&amp;quot;       &amp;quot;Firmicutes&amp;quot;          &amp;quot;Tenericutes&amp;quot;        
##  [4] &amp;quot;Epsilonbacteraeota&amp;quot;  &amp;quot;Actinobacteria&amp;quot;      &amp;quot;Patescibacteria&amp;quot;    
##  [7] &amp;quot;Proteobacteria&amp;quot;      &amp;quot;Deinococcus-Thermus&amp;quot; &amp;quot;Cyanobacteria&amp;quot;      
## [10] &amp;quot;Verrucomicrobia&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;otu_table(ps_phylum)[1:5, c(1:3, 5, 7)]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## OTU Table:          [5 taxa and 5 samples]
##                      taxa are columns
##        Bacteroidetes Firmicutes Tenericutes Actinobacteria Proteobacteria
## F3D0            3708       2620         151             27             12
## F3D1            1799       3011         157              3             16
## F3D141          3437       1370          35             16              0
## F3D142          2003        452          33             28              0
## F3D143          1816        655          34             10              0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we are agglomerating the counts to the Phylum-level and then renaming the ASVs to make them more descriptive.
We can see that we have 10 Phyla. The ASV information (i.e. refseq and taxonomy for one of the ASVs in each Phylum) gets carried along for the ride (we can typically ignore this or you can remove these components if you prefer).&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;we-can-also-subset-taxa&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;We can also subset taxa…&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(ps_bacteroides &amp;lt;- subset_taxa(ps, Genus == &amp;quot;Bacteroides&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 3 taxa and 19 samples ]
## sample_data() Sample Data:       [ 19 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 3 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 3 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tax_table(ps_bacteroides)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Taxonomy Table:     [3 taxa by 7 taxonomic ranks]:
##        Kingdom    Phylum          Class         Order          
## ASV5   &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
## ASV80  &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
## ASV163 &amp;quot;Bacteria&amp;quot; &amp;quot;Bacteroidetes&amp;quot; &amp;quot;Bacteroidia&amp;quot; &amp;quot;Bacteroidales&amp;quot;
##        Family           Genus         Species   
## ASV5   &amp;quot;Bacteroidaceae&amp;quot; &amp;quot;Bacteroides&amp;quot; NA        
## ASV80  &amp;quot;Bacteroidaceae&amp;quot; &amp;quot;Bacteroides&amp;quot; &amp;quot;vulgatus&amp;quot;
## ASV163 &amp;quot;Bacteroidaceae&amp;quot; &amp;quot;Bacteroides&amp;quot; &amp;quot;vulgatus&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prune_taxa(taxa_sums(ps) &amp;gt; 100, ps) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 99 taxa and 19 samples ]
## sample_data() Sample Data:       [ 19 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 99 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 99 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;filter_taxa(ps, function(x) sum(x &amp;gt; 10) &amp;gt; (0.1*length(x)), TRUE)   &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 135 taxa and 19 samples ]
## sample_data() Sample Data:       [ 19 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 135 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 135 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;With the above commands we can quickly see that we have:
&lt;ul&gt;
&lt;li&gt;A total of 3 ASVs classified as Bacteroides&lt;/li&gt;
&lt;li&gt;A total of 99 ASVs seen at least 100 times across all samples&lt;/li&gt;
&lt;li&gt;A total of 135 taxa seen at least 10 times in at least 10% of samples&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;This highlights how we might use phyloseq as a tool to filter taxa prior to statistical analysis.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;subsetting-samples-and-tranforming-counts&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Subsetting samples and tranforming counts&lt;/h1&gt;
&lt;p&gt;Phyloseq can also be used to subset all the individual components based on sample metadata information. &lt;strong&gt;This would take a fair bit of work to do properly if we were working with each individual component…and not with phyloseq.&lt;/strong&gt; Below we subset the early stool samples. Then we generate an object that includes only samples with &amp;gt; 5,000 total reads.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ps_early &amp;lt;- subset_samples(ps, When == &amp;quot;Early&amp;quot;)
(ps_early = prune_taxa(taxa_sums(ps_early) &amp;gt; 0, ps_early))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 183 taxa and 9 samples ]
## sample_data() Sample Data:       [ 9 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 183 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 183 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_data(ps_early)$When&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot; &amp;quot;Early&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sort(sample_sums(ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## F3D143 F3D142 F3D144   F3D5 F3D146   F3D7 F3D150   F3D8 F3D141   F3D1 
##   2518   2521   3488   3716   3879   4217   4240   4547   4863   5017 
##   F3D3 F3D145   F3D9   F3D0   F3D6 F3D148 F3D149 F3D147   F3D2 
##   5491   5820   6015   6528   6679   9935  10653  13006  16835&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(ps_reads_GT_5k = prune_samples(sample_sums(ps) &amp;gt; 5000, ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 232 taxa and 10 samples ]
## sample_data() Sample Data:       [ 10 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 232 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 232 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sort(sample_sums(ps_reads_GT_5k))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   F3D1   F3D3 F3D145   F3D9   F3D0   F3D6 F3D148 F3D149 F3D147   F3D2 
##   5017   5491   5820   6015   6528   6679   9935  10653  13006  16835&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Counts can be converted to relative abundances (e.g. total sum scaling) using the transform_sample_counts function. They can also be subsampled/rarified using the rarefy_even_depth function. However, subsampling to account for differences in sequencing depth acorss samples has important limitations. See the papers below for a more in-depth discussion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003531&#34;&gt;McMurdie and Holmes, Waste Not, Want Not: Why Rarefying Microbiome Data Is Inadmissible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://microbiomejournal.biomedcentral.com/articles/10.1186/s40168-017-0237-y&#34;&gt;Weiss et. al., Normalization and microbial differential abundance strategies depend upon data characteristics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ps_relabund &amp;lt;- transform_sample_counts(ps, function(x) x / sum(x))
otu_table(ps_relabund)[1:5, 1:5]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## OTU Table:          [5 taxa and 5 samples]
##                      taxa are columns
##              ASV1       ASV2       ASV3       ASV4       ASV5
## F3D0   0.08869485 0.05284926 0.06878064 0.06587010 0.02359069
## F3D1   0.08072553 0.07036077 0.04604345 0.01375324 0.02790512
## F3D141 0.09130167 0.07443965 0.07094386 0.10322846 0.03886490
## F3D142 0.11463705 0.12058707 0.06267354 0.06505355 0.07140024
## F3D143 0.09054805 0.06989674 0.08101668 0.09173948 0.05162828&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(ps_rare &amp;lt;- rarefy_even_depth(ps, sample.size = 4000, rngseed = 123, replace = FALSE))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `set.seed(123)` was used to initialize repeatable random subsampling.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please record this for your records so others can reproduce.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Try `set.seed(123); .Random.seed` for the full vector&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 5 samples removedbecause they contained fewer reads than `sample.size`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Up to first five removed samples are:&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## F3D142F3D143F3D144F3D146F3D5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 15OTUs were removed because they are no longer 
## present in any sample after random subsampling&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 217 taxa and 14 samples ]
## sample_data() Sample Data:       [ 14 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 217 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 217 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_sums(ps_rare)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   F3D0   F3D1 F3D141 F3D145 F3D147 F3D148 F3D149 F3D150   F3D2   F3D3 
##   4000   4000   4000   4000   4000   4000   4000   4000   4000   4000 
##   F3D6   F3D7   F3D8   F3D9 
##   4000   4000   4000   4000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;example-analytic-and-graphical-capabilities&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Example analytic and graphical capabilities&lt;/h1&gt;
&lt;p&gt;Phyloseq has an extensive list of functions for processing and analyzing microbiome data. I recommend you view the tutorial section on the phyloseq home page to get a feel for all that phyloseq can do. Below are just a few quick examples. We will get more into these types of analyses in subsequent sessions.&lt;/p&gt;
&lt;div id=&#34;alpha-diversity&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Alpha-diversity&lt;/h3&gt;
&lt;p&gt;Below we will receive a warning that our data does not contain any singletons and that the results of richness estimates are probably unreliable. This is an important point and we will delve into this issue more in the next session. For now, you can go ahead and ignore the warning.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(estimate_richness(ps))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in estimate_richness(ps): The data you have provided does not have
## any singletons. This is highly suspicious. Results of richness
## estimates (for example) are probably unreliable, or wrong, if you have already
## trimmed low-abundance taxa from the data.
## 
## We recommended that you find the un-trimmed data and retry.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        Observed Chao1 se.chao1 ACE   se.ACE  Shannon   Simpson InvSimpson
## F3D0        106   106        0 106 4.539138 3.865881 0.9644889   28.16024
## F3D1        100   100        0 100 4.208325 3.993196 0.9709838   34.46347
## F3D141       74    74        0  74 3.878214 3.428895 0.9501123   20.04502
## F3D142       48    48        0  48 3.388092 3.117940 0.9386949   16.31185
## F3D143       56    56        0  56 3.543102 3.292717 0.9464422   18.67141
## F3D144       47    47        0  47 3.135249 2.994201 0.9309895   14.49054
##           Fisher
## F3D0   17.973004
## F3D1   17.696857
## F3D141 12.383762
## F3D142  8.412094
## F3D143 10.148818
## F3D144  7.678694&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(p &amp;lt;- plot_richness(ps, x = &amp;quot;When&amp;quot;, color = &amp;quot;When&amp;quot;, measures = c(&amp;quot;Observed&amp;quot;, &amp;quot;Shannon&amp;quot;)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in estimate_richness(physeq, split = TRUE, measures = measures): The data you have provided does not have
## any singletons. This is highly suspicious. Results of richness
## estimates (for example) are probably unreliable, or wrong, if you have already
## trimmed low-abundance taxa from the data.
## 
## We recommended that you find the un-trimmed data and retry.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-28-introduction-to-phyloseq_files/figure-html/adiv-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p + labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Alpha Diversity Measure\n&amp;quot;) + 
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-28-introduction-to-phyloseq_files/figure-html/adiv-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;beta-diversity-ordination&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Beta-diversity ordination&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ps_rare_bray &amp;lt;- ordinate(ps_rare, &amp;quot;NMDS&amp;quot;, &amp;quot;bray&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Square root transformation
## Wisconsin double standardization
## Run 0 stress 0.08484704 
## Run 1 stress 0.08484704 
## ... New best solution
## ... Procrustes: rmse 2.497137e-06  max resid 5.691675e-06 
## ... Similar to previous best
## Run 2 stress 0.09657264 
## Run 3 stress 0.08484704 
## ... Procrustes: rmse 7.186183e-07  max resid 1.423558e-06 
## ... Similar to previous best
## Run 4 stress 0.08484704 
## ... Procrustes: rmse 3.303025e-06  max resid 7.565974e-06 
## ... Similar to previous best
## Run 5 stress 0.1744901 
## Run 6 stress 0.08484704 
## ... Procrustes: rmse 1.008148e-06  max resid 2.038791e-06 
## ... Similar to previous best
## Run 7 stress 0.08484704 
## ... Procrustes: rmse 1.776536e-06  max resid 3.520974e-06 
## ... Similar to previous best
## Run 8 stress 0.09657264 
## Run 9 stress 0.08484704 
## ... Procrustes: rmse 8.550518e-07  max resid 1.794331e-06 
## ... Similar to previous best
## Run 10 stress 0.08484704 
## ... Procrustes: rmse 1.376679e-06  max resid 2.816876e-06 
## ... Similar to previous best
## Run 11 stress 0.08484704 
## ... Procrustes: rmse 4.702272e-06  max resid 8.17489e-06 
## ... Similar to previous best
## Run 12 stress 0.08484704 
## ... New best solution
## ... Procrustes: rmse 2.157179e-07  max resid 4.2813e-07 
## ... Similar to previous best
## Run 13 stress 0.08484704 
## ... Procrustes: rmse 1.726469e-06  max resid 3.270828e-06 
## ... Similar to previous best
## Run 14 stress 0.08484704 
## ... Procrustes: rmse 1.055175e-06  max resid 2.649077e-06 
## ... Similar to previous best
## Run 15 stress 0.09657265 
## Run 16 stress 0.1751066 
## Run 17 stress 0.08484704 
## ... Procrustes: rmse 6.953774e-07  max resid 1.374792e-06 
## ... Similar to previous best
## Run 18 stress 0.09584961 
## Run 19 stress 0.08484704 
## ... Procrustes: rmse 5.428812e-06  max resid 1.248684e-05 
## ... Similar to previous best
## Run 20 stress 0.1795526 
## *** Solution reached&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_ordination(ps_rare, ps_rare_bray, type=&amp;quot;samples&amp;quot;, color=&amp;quot;When&amp;quot;) + geom_point(size = 3) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-28-introduction-to-phyloseq_files/figure-html/bdiv-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;stacked-bar-plots&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Stacked bar plots&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_bar(ps, fill=&amp;quot;Phylum&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-28-introduction-to-phyloseq_files/figure-html/taxplot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_bar(ps_relabund, fill=&amp;quot;Phylum&amp;quot;) + 
  geom_bar(aes(color = Phylum, fill = Phylum), stat=&amp;quot;identity&amp;quot;, position=&amp;quot;stack&amp;quot;) +
  labs(x = &amp;quot;&amp;quot;, y = &amp;quot;Relative Abundance\n&amp;quot;) +
  theme(panel.background = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-28-introduction-to-phyloseq_files/figure-html/taxplot-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;heatmaps&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Heatmaps&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(ps_fam &amp;lt;- tax_glom(ps, &amp;quot;Family&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 33 taxa and 19 samples ]
## sample_data() Sample Data:       [ 19 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 33 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 33 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;(ps_fam_rare &amp;lt;- rarefy_even_depth(ps_fam, sample.size = 4000, rngseed = 123, replace = FALSE))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `set.seed(123)` was used to initialize repeatable random subsampling.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please record this for your records so others can reproduce.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Try `set.seed(123); .Random.seed` for the full vector&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 5 samples removedbecause they contained fewer reads than `sample.size`.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Up to first five removed samples are:&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## F3D142F3D143F3D144F3D146F3D5&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 9OTUs were removed because they are no longer 
## present in any sample after random subsampling&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## phyloseq-class experiment-level object
## otu_table()   OTU Table:         [ 24 taxa and 14 samples ]
## sample_data() Sample Data:       [ 14 samples by 4 sample variables ]
## tax_table()   Taxonomy Table:    [ 24 taxa by 7 taxonomic ranks ]
## refseq()      DNAStringSet:      [ 24 reference sequences ]&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_heatmap(ps_fam_rare, sample.label = &amp;quot;When&amp;quot;, taxa.label = &amp;quot;Family&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Transformation introduced infinite values in discrete y-axis&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-28-introduction-to-phyloseq_files/figure-html/heatmap-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
